{"name":"Sagui","tagline":"Configuration-free modern frontend development","body":"# Sagui\r\n\r\n[![Build Status](https://travis-ci.org/pirelenito/sagui.svg)](https://travis-ci.org/pirelenito/sagui)\r\n[![npm version](https://badge.fury.io/js/sagui.svg)](https://badge.fury.io/js/sagui)\r\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat)](https://github.com/feross/standard)\r\n[![Code Climate](https://codeclimate.com/github/pirelenito/sagui/badges/gpa.svg)](https://codeclimate.com/github/pirelenito/sagui)\r\n\r\nSagui is a modern approach on build infrastructure to front-end projects. It follows an opinionated **convention over configuration** approach, providing a solid foundation so that you can focus on writing your code.\r\n\r\n## Features:\r\n\r\nSagui acts as a front-end to a bunch of amazing technology to keep your development environment always up to date.\r\n\r\nHere are some of its main features:\r\n\r\n- Build and development infrastructure via [webpack](http://webpack.github.io/);\r\n- Automated testing with [Jasmine](http://jasmine.github.io/) and [Karma](http://karma-runner.github.io/);\r\n- Linting via [JavaScript Standard Style](http://standardjs.com/);\r\n- Modern JavaScript language support with [Babel](http://babeljs.io/);\r\n- Live-reload with \"hot module replacement\", specially for [React components](https://github.com/gaearon/react-transform);\r\n- [CSS Modules](https://github.com/css-modules);\r\n- [Sass lang](http://sass-lang.com/);\r\n- and more...\r\n\r\nSagui strives to be the **last devDependency**:\r\n\r\n- [Be local](https://twitter.com/pirelenito/status/682571493092515840), not global;\r\n- [Be extensible](#custom-webpack-and-karma-config);\r\n- Act in the shadows behind [npm scripts](https://docs.npmjs.com/misc/scripts);\r\n- No more generators;\r\n- No more boilerplate projects;\r\n- No more starter kits;\r\n- No more updating Babel and Webpack.\r\n\r\n## Creating a new Sagui project\r\n\r\nCreate a new NPM project:\r\n\r\n```bash\r\nnpm init -y .\r\n```\r\n\r\nInstall sagui **locally** as a development dependency:\r\n\r\n```bash\r\nnpm install --save-dev sagui\r\n```\r\n\r\nAfter the install is completed, Sagui **bootstraps** its basic infrastructure, no extra step is required.\r\n\r\n```bash\r\n$ tree\r\n.\r\n├── .eslintrc\r\n├── node_modules\r\n│   └── sagui\r\n├── package.json\r\n├── sagui.config.js\r\n└── src\r\n    ├── index.html\r\n    ├── index.js\r\n    ├── index.css\r\n    └── index.spec.js\r\n```\r\n\r\nFrom here on, you are ready to start development. You do that by **using common NPM run scripts**:\r\n\r\n```bash\r\nnpm start\r\n```\r\n\r\nRun the tests!\r\n\r\n```bash\r\nnpm test\r\n```\r\n\r\nSagui manages the [package.json](https://docs.npmjs.com/files/package.json) scripts for you, creating additional tasks such as:\r\n\r\n- `npm run sagui:test`\r\n- `npm run sagui:test-watch`\r\n- `npm run sagui:develop`\r\n- `npm run sagui:build`\r\n- `npm run sagui:dist`\r\n\r\nThen you can start writing your code inside the `src/` folder.\r\n\r\n## Configuration\r\n\r\nThe internal architecture of Sagui is build arround plugins, each providing a set of functionalities that can be used during any of Sagui's actions.\r\n\r\n### Pages\r\n\r\nBy default, sagui will build and serve a single page for your entire application. This is your `src/index.js` and `src/index.html` files.\r\n\r\nTo change it and add more pages, you can add a custom configuration in the `sagui.config.js` file:\r\n\r\n```js\r\n/**\r\n * Sagui configuration object\r\n */\r\nmodule.exports = {\r\n  /**\r\n   * Different application entry-points\r\n   * Each page is a combination of a JavaScript file and a HTML file\r\n   *\r\n   * Example: 'index' -> 'index.html' and 'index.js'\r\n   */\r\n  pages: ['index', 'demo']\r\n}\r\n```\r\n\r\nAnd add additional `src/demo.js` and `src/demo.html` files for each page entry-point.\r\n\r\n### <a name=\"custom-webpack-and-karma-config\"></a> Custom Webpack and Karma config\r\n\r\nTo overwrite and extend the default configuartion you can use the same `saqui.config.js` file to specify your custom configurations:\r\n\r\n```js\r\n/**\r\n * Sagui configuration object\r\n */\r\nmodule.exports = {\r\n  /**\r\n   * Webpack configuration object\r\n   * see: http://webpack.github.io/docs/configuration.html\r\n   *\r\n   * Will ovewrite and extend the default Sagui configuration\r\n   */\r\n  webpackConfig: {\r\n\r\n  },\r\n\r\n  /**\r\n   * Karma configuration object\r\n   * see: https://karma-runner.github.io/0.13/config/configuration-file.html\r\n   *\r\n   * Will overwrite and extend the default Sagui configuration\r\n   */\r\n  karmaConfig: {\r\n\r\n  }\r\n}\r\n```\r\n\r\n### Disable plugins\r\n\r\nIf you need to disable any default behavior, it is possible via:\r\n\r\n```js\r\n/**\r\n * Sagui configuration object\r\n */\r\nmodule.exports = {\r\n  /**\r\n   * List of Sagui plugins to disable\r\n   */\r\n  disabledPlugins: []\r\n}\r\n```\r\n\r\nDefault available plugins:\r\n\r\n- **webpack-babel**: ES2015 support;\r\n- **webpack-base**: Base paths and webpack plugins;\r\n- **webpack-css-modules**: [CSS Modules](https://github.com/css-modules/css-modules) support;\r\n- **webpack-define-node-env**: Populates `process.env.NODE_ENV`;\r\n- **webpack-eslint**: ESLint support via [Standard](http://standardjs.com/);\r\n- **webpack-json**: JSON loader;\r\n- **webpack-media** Basic media loading support (JPG, PNG, GIF);\r\n- **webpack-pages**: Add support for the above *Pages* configuration;\r\n- **webpack-scss**: SCSS support.\r\n\r\n## Development\r\n\r\nTo develop the tool locally, we will need to resort to a combination of a global [npm link](https://docs.npmjs.com/cli/link) and local links in projects.\r\n\r\nYou can start by linking Sagui globally. While at its folder:\r\n\r\n```bash\r\nSAGUI_LINK=true npm link\r\n```\r\n\r\nThe environment variable is to inform Sagui that it is working in a \"linked environment\".\r\n\r\nThen, **at the project you intend to use Sagui**, link it locally:\r\n\r\n```bash\r\nnpm link sagui\r\n```\r\n\r\nNow, the project is set to use your development copy of Sagui. Unfortunately, you will need to run any command in the project providing the environment variable `SAGUI_LINK`:\r\n\r\n```bash\r\nSAGUI_LINK=true npm start\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}